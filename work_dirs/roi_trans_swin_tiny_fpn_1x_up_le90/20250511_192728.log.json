{"env_info": "sys.platform: linux\nPython: 3.8.20 | packaged by conda-forge | (default, Sep 30 2024, 17:52:49) [GCC 13.3.0]\nCUDA available: True\nGPU 0: NVIDIA A100-SXM4-80GB\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 10.1, V10.1.24\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0\nPyTorch: 1.9.0+cu111\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.10.0+cu111\nOpenCV: 4.11.0\nMMCV: 1.7.2\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.1\nMMRotate: 0.3.4+b030f38", "config": "dataset_type = 'BrickKilnDataset'\ndata_root = '/home/shardul.junagade/my-work/domain-adaptation-brick-kilns/data/uttar_pradesh/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='RResize', img_scale=(128, 128)),\n    dict(\n        type='RRandomFlip',\n        flip_ratio=[0.25, 0.25, 0.25],\n        direction=['horizontal', 'vertical', 'diagonal'],\n        version='le90'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(128, 128),\n        flip=False,\n        transforms=[\n            dict(type='RResize'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=128,\n    workers_per_gpu=2,\n    train=dict(\n        type='BrickKilnDataset',\n        ann_file=\n        '/home/shardul.junagade/my-work/domain-adaptation-brick-kilns/data/uttar_pradesh/train/annfiles/',\n        img_prefix=\n        '/home/shardul.junagade/my-work/domain-adaptation-brick-kilns/data/uttar_pradesh/train/images/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='RResize', img_scale=(128, 128)),\n            dict(\n                type='RRandomFlip',\n                flip_ratio=[0.25, 0.25, 0.25],\n                direction=['horizontal', 'vertical', 'diagonal'],\n                version='le90'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ],\n        version='le90'),\n    val=dict(\n        type='BrickKilnDataset',\n        ann_file=\n        '/home/shardul.junagade/my-work/domain-adaptation-brick-kilns/data/uttar_pradesh/val/annfiles/',\n        img_prefix=\n        '/home/shardul.junagade/my-work/domain-adaptation-brick-kilns/data/uttar_pradesh/val/images/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(128, 128),\n                flip=False,\n                transforms=[\n                    dict(type='RResize'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        version='le90'),\n    test=dict(\n        type='BrickKilnDataset',\n        ann_file=\n        '/home/shardul.junagade/my-work/domain-adaptation-brick-kilns/data/uttar_pradesh/test/images/',\n        img_prefix=\n        '/home/shardul.junagade/my-work/domain-adaptation-brick-kilns/data/uttar_pradesh/test/images/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(128, 128),\n                flip=False,\n                transforms=[\n                    dict(type='RResize'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        version='le90'))\nevaluation = dict(interval=1, metric='mAP')\noptimizer = dict(\n    type='AdamW',\n    lr=0.0001,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.3333333333333333,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=25)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nangle_version = 'le90'\nmodel = dict(\n    type='RoITransformer',\n    backbone=dict(\n        type='SwinTransformer',\n        embed_dims=96,\n        depths=[2, 2, 6, 2],\n        num_heads=[3, 6, 12, 24],\n        window_size=7,\n        mlp_ratio=4,\n        qkv_bias=True,\n        qk_scale=None,\n        drop_rate=0.0,\n        attn_drop_rate=0.0,\n        drop_path_rate=0.2,\n        patch_norm=True,\n        out_indices=(0, 1, 2, 3),\n        with_cp=False,\n        convert_weights=True,\n        init_cfg=dict(\n            type='Pretrained',\n            checkpoint=\n            'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_tiny_patch4_window7_224.pth'\n        )),\n    neck=dict(\n        type='FPN',\n        in_channels=[96, 192, 384, 768],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RotatedRPNHead',\n        in_channels=256,\n        feat_channels=256,\n        version='le90',\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),\n    roi_head=dict(\n        type='RoITransRoIHead',\n        version='le90',\n        num_stages=2,\n        stage_loss_weights=[1, 1],\n        bbox_roi_extractor=[\n            dict(\n                type='SingleRoIExtractor',\n                roi_layer=dict(\n                    type='RoIAlign', output_size=7, sampling_ratio=0),\n                out_channels=256,\n                featmap_strides=[4, 8, 16, 32]),\n            dict(\n                type='RotatedSingleRoIExtractor',\n                roi_layer=dict(\n                    type='RoIAlignRotated',\n                    out_size=7,\n                    sample_num=2,\n                    clockwise=True),\n                out_channels=256,\n                featmap_strides=[4, 8, 16, 32])\n        ],\n        bbox_head=[\n            dict(\n                type='RotatedShared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=3,\n                bbox_coder=dict(\n                    type='DeltaXYWHAHBBoxCoder',\n                    angle_range='le90',\n                    norm_factor=2,\n                    edge_swap=True,\n                    target_means=[0.0, 0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.1, 0.1, 0.2, 0.2, 1]),\n                reg_class_agnostic=True,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='RotatedShared2FCBBoxHead',\n                in_channels=256,\n                fc_out_channels=1024,\n                roi_feat_size=7,\n                num_classes=3,\n                bbox_coder=dict(\n                    type='DeltaXYWHAOBBoxCoder',\n                    angle_range='le90',\n                    norm_factor=None,\n                    edge_swap=True,\n                    proj_xy=True,\n                    target_means=[0.0, 0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.05, 0.05, 0.1, 0.1, 0.5]),\n                reg_class_agnostic=False,\n                loss_cls=dict(\n                    type='CrossEntropyLoss',\n                    use_sigmoid=False,\n                    loss_weight=1.0),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))\n        ]),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=0,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=2000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=[\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.5,\n                    neg_iou_thr=0.5,\n                    min_pos_iou=0.5,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1,\n                    iou_calculator=dict(type='BboxOverlaps2D')),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.5,\n                    neg_iou_thr=0.5,\n                    min_pos_iou=0.5,\n                    match_low_quality=False,\n                    ignore_iof_thr=-1,\n                    iou_calculator=dict(type='RBboxOverlaps2D')),\n                sampler=dict(\n                    type='RRandomSampler',\n                    num=512,\n                    pos_fraction=0.25,\n                    neg_pos_ub=-1,\n                    add_gt_as_proposals=True),\n                pos_weight=-1,\n                debug=False)\n        ]),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=2000,\n            max_per_img=2000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            nms_pre=2000,\n            min_bbox_size=0,\n            score_thr=0.05,\n            nms=dict(type='le90', iou_thr=0.1),\n            max_per_img=2000)))\npretrained = 'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_tiny_patch4_window7_224.pth'\nnum_epochs = 25\nwork_dir = './work_dirs/roi_trans_swin_tiny_fpn_1x_up_le90'\nauto_resume = False\ngpu_ids = range(0, 1)\n", "seed": 0, "exp_name": "roi_trans_swin_tiny_fpn_1x_up_le90.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 4e-05, "memory": 18647, "data_time": 0.13069, "loss_rpn_cls": 0.1846, "loss_rpn_bbox": 9e-05, "s0.loss_cls": 0.35831, "s0.acc": 98.43948, "s0.loss_bbox": 0.0085, "s1.loss_cls": 0.07163, "s1.acc": 97.88406, "s1.loss_bbox": 0.0054, "loss": 0.62852, "grad_norm": 5.44283, "time": 8.24066}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 5e-05, "memory": 18647, "data_time": 0.07499, "loss_rpn_cls": 0.0007, "loss_rpn_bbox": 0.0, "s0.loss_cls": 0.64525, "s0.acc": 99.82971, "s0.loss_bbox": 0.0052, "s1.loss_cls": 0.00682, "s1.acc": 99.81723, "s1.loss_bbox": 0.00184, "loss": 0.6598, "grad_norm": 0.79741, "time": 8.10015}
{"mode": "val", "epoch": 1, "iter": 4936, "lr": 5e-05, "mAP": 0.01343}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 6e-05, "memory": 18647, "data_time": 0.12153, "loss_rpn_cls": 0.00038, "loss_rpn_bbox": 5e-05, "s0.loss_cls": 0.5355, "s0.acc": 99.84427, "s0.loss_bbox": 0.00446, "s1.loss_cls": 0.00534, "s1.acc": 99.8334, "s1.loss_bbox": 0.00142, "loss": 0.54715, "grad_norm": 1.03253, "time": 7.8997}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 6e-05, "memory": 18647, "data_time": 0.06895, "loss_rpn_cls": 0.00205, "loss_rpn_bbox": 3e-05, "s0.loss_cls": 0.25716, "s0.acc": 99.70688, "s0.loss_bbox": 0.00736, "s1.loss_cls": 0.00883, "s1.acc": 99.76688, "s1.loss_bbox": 0.00337, "loss": 0.27878, "grad_norm": 1.19287, "time": 7.8237}
{"mode": "val", "epoch": 2, "iter": 4936, "lr": 6e-05, "mAP": 0.07146}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 7e-05, "memory": 18647, "data_time": 0.12211, "loss_rpn_cls": 0.0002, "loss_rpn_bbox": 0.0, "s0.loss_cls": 0.1036, "s0.acc": 99.63095, "s0.loss_bbox": 0.01076, "s1.loss_cls": 0.01104, "s1.acc": 99.64581, "s1.loss_bbox": 0.01141, "loss": 0.13701, "grad_norm": 0.69391, "time": 8.10618}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 8e-05, "memory": 18647, "data_time": 0.07045, "loss_rpn_cls": 0.0003, "loss_rpn_bbox": 2e-05, "s0.loss_cls": 0.04804, "s0.acc": 99.58743, "s0.loss_bbox": 0.0119, "s1.loss_cls": 0.01237, "s1.acc": 99.59149, "s1.loss_bbox": 0.0145, "loss": 0.08713, "grad_norm": 0.49965, "time": 8.08788}
{"mode": "val", "epoch": 3, "iter": 4936, "lr": 8e-05, "mAP": 0.13455}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 9e-05, "memory": 18647, "data_time": 0.12957, "loss_rpn_cls": 0.00028, "loss_rpn_bbox": 2e-05, "s0.loss_cls": 0.02719, "s0.acc": 99.67966, "s0.loss_bbox": 0.00844, "s1.loss_cls": 0.01054, "s1.acc": 99.64725, "s1.loss_bbox": 0.01123, "loss": 0.0577, "grad_norm": 0.34592, "time": 8.19142}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 9e-05, "memory": 18647, "data_time": 0.07614, "loss_rpn_cls": 0.00017, "loss_rpn_bbox": 1e-05, "s0.loss_cls": 0.02055, "s0.acc": 99.6951, "s0.loss_bbox": 0.00764, "s1.loss_cls": 0.00999, "s1.acc": 99.65863, "s1.loss_bbox": 0.01089, "loss": 0.04926, "grad_norm": 0.2755, "time": 8.14331}
{"mode": "val", "epoch": 4, "iter": 4936, "lr": 0.0001, "mAP": 0.13851}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.0001, "memory": 18647, "data_time": 0.11674, "loss_rpn_cls": 0.00022, "loss_rpn_bbox": 1e-05, "s0.loss_cls": 0.01003, "s0.acc": 99.79333, "s0.loss_bbox": 0.00519, "s1.loss_cls": 0.00863, "s1.acc": 99.70926, "s1.loss_bbox": 0.00799, "loss": 0.03206, "grad_norm": 0.18152, "time": 7.96326}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.0001, "memory": 18647, "data_time": 0.06802, "loss_rpn_cls": 0.00017, "loss_rpn_bbox": 1e-05, "s0.loss_cls": 0.01089, "s0.acc": 99.76151, "s0.loss_bbox": 0.00618, "s1.loss_cls": 0.00911, "s1.acc": 99.69409, "s1.loss_bbox": 0.00869, "loss": 0.03506, "grad_norm": 0.2038, "time": 7.50992}
{"mode": "val", "epoch": 5, "iter": 4936, "lr": 0.0001, "mAP": 0.19526}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 0.0001, "memory": 18647, "data_time": 0.11575, "loss_rpn_cls": 6e-05, "loss_rpn_bbox": 0.0, "s0.loss_cls": 0.01298, "s0.acc": 99.69131, "s0.loss_bbox": 0.00772, "s1.loss_cls": 0.00911, "s1.acc": 99.68481, "s1.loss_bbox": 0.01113, "loss": 0.04101, "grad_norm": 0.20093, "time": 7.38152}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.0001, "memory": 18647, "data_time": 0.07064, "loss_rpn_cls": 0.00036, "loss_rpn_bbox": 3e-05, "s0.loss_cls": 0.01028, "s0.acc": 99.68936, "s0.loss_bbox": 0.00769, "s1.loss_cls": 0.01136, "s1.acc": 99.6123, "s1.loss_bbox": 0.01582, "loss": 0.04554, "grad_norm": 0.22021, "time": 7.28614}
{"mode": "val", "epoch": 6, "iter": 4936, "lr": 0.0001, "mAP": 0.24539}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 0.0001, "memory": 18647, "data_time": 0.12201, "loss_rpn_cls": 0.00015, "loss_rpn_bbox": 1e-05, "s0.loss_cls": 0.00805, "s0.acc": 99.75696, "s0.loss_bbox": 0.00599, "s1.loss_cls": 0.00965, "s1.acc": 99.67102, "s1.loss_bbox": 0.01244, "loss": 0.03629, "grad_norm": 0.17889, "time": 7.78572}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 0.0001, "memory": 18647, "data_time": 0.07192, "loss_rpn_cls": 0.0001, "loss_rpn_bbox": 0.0, "s0.loss_cls": 0.01022, "s0.acc": 99.6889, "s0.loss_bbox": 0.00745, "s1.loss_cls": 0.01049, "s1.acc": 99.63287, "s1.loss_bbox": 0.01471, "loss": 0.04297, "grad_norm": 0.18598, "time": 7.85448}
{"mode": "val", "epoch": 7, "iter": 4936, "lr": 0.0001, "mAP": 0.32509}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 0.0001, "memory": 18647, "data_time": 0.12141, "loss_rpn_cls": 0.00022, "loss_rpn_bbox": 2e-05, "s0.loss_cls": 0.01196, "s0.acc": 99.61682, "s0.loss_bbox": 0.00892, "s1.loss_cls": 0.01216, "s1.acc": 99.56964, "s1.loss_bbox": 0.01891, "loss": 0.05217, "grad_norm": 0.21533, "time": 8.70578}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 0.0001, "memory": 18647, "data_time": 0.07174, "loss_rpn_cls": 7e-05, "loss_rpn_bbox": 0.0, "s0.loss_cls": 0.01055, "s0.acc": 99.65814, "s0.loss_bbox": 0.00719, "s1.loss_cls": 0.01168, "s1.acc": 99.58585, "s1.loss_bbox": 0.01812, "loss": 0.04761, "grad_norm": 0.20465, "time": 8.05136}
{"mode": "val", "epoch": 8, "iter": 4936, "lr": 0.0001, "mAP": 0.32797}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 1e-05, "memory": 18647, "data_time": 0.12653, "loss_rpn_cls": 0.00014, "loss_rpn_bbox": 2e-05, "s0.loss_cls": 0.00635, "s0.acc": 99.80969, "s0.loss_bbox": 0.0036, "s1.loss_cls": 0.00949, "s1.acc": 99.66553, "s1.loss_bbox": 0.01306, "loss": 0.03265, "grad_norm": 0.12122, "time": 10.66434}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 18647, "data_time": 0.0684, "loss_rpn_cls": 9e-05, "loss_rpn_bbox": 0.0, "s0.loss_cls": 0.00655, "s0.acc": 99.79858, "s0.loss_bbox": 0.00384, "s1.loss_cls": 0.0096, "s1.acc": 99.65802, "s1.loss_bbox": 0.01372, "loss": 0.0338, "grad_norm": 0.11762, "time": 10.64194}
{"mode": "val", "epoch": 9, "iter": 4936, "lr": 1e-05, "mAP": 0.36475}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 18647, "data_time": 0.12033, "loss_rpn_cls": 0.0001, "loss_rpn_bbox": 0.0, "s0.loss_cls": 0.00753, "s0.acc": 99.76682, "s0.loss_bbox": 0.00459, "s1.loss_cls": 0.0102, "s1.acc": 99.63913, "s1.loss_bbox": 0.01459, "loss": 0.03702, "grad_norm": 0.13818, "time": 8.0148}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 18647, "data_time": 0.06961, "loss_rpn_cls": 0.00012, "loss_rpn_bbox": 0.0, "s0.loss_cls": 0.00734, "s0.acc": 99.77283, "s0.loss_bbox": 0.00436, "s1.loss_cls": 0.00999, "s1.acc": 99.64847, "s1.loss_bbox": 0.01436, "loss": 0.03618, "grad_norm": 0.14547, "time": 7.73802}
{"mode": "val", "epoch": 10, "iter": 4936, "lr": 1e-05, "mAP": 0.35495}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 1e-05, "memory": 18647, "data_time": 0.12117, "loss_rpn_cls": 5e-05, "loss_rpn_bbox": 0.0, "s0.loss_cls": 0.00771, "s0.acc": 99.75443, "s0.loss_bbox": 0.00489, "s1.loss_cls": 0.0102, "s1.acc": 99.63785, "s1.loss_bbox": 0.01493, "loss": 0.03779, "grad_norm": 0.13479, "time": 10.04313}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 18647, "data_time": 0.06913, "loss_rpn_cls": 0.0002, "loss_rpn_bbox": 2e-05, "s0.loss_cls": 0.00732, "s0.acc": 99.76651, "s0.loss_bbox": 0.00445, "s1.loss_cls": 0.01028, "s1.acc": 99.63513, "s1.loss_bbox": 0.01438, "loss": 0.03665, "grad_norm": 0.14298, "time": 9.33373}
{"mode": "val", "epoch": 11, "iter": 4936, "lr": 1e-05, "mAP": 0.37368}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 18647, "data_time": 0.13352, "loss_rpn_cls": 0.00017, "loss_rpn_bbox": 1e-05, "s0.loss_cls": 0.00795, "s0.acc": 99.7395, "s0.loss_bbox": 0.00527, "s1.loss_cls": 0.01124, "s1.acc": 99.60062, "s1.loss_bbox": 0.01669, "loss": 0.04133, "grad_norm": 0.14994, "time": 10.1377}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 18647, "data_time": 0.07581, "loss_rpn_cls": 0.00013, "loss_rpn_bbox": 1e-05, "s0.loss_cls": 0.00781, "s0.acc": 99.74594, "s0.loss_bbox": 0.00496, "s1.loss_cls": 0.01091, "s1.acc": 99.61349, "s1.loss_bbox": 0.01625, "loss": 0.04006, "grad_norm": 0.14373, "time": 9.77137}
{"mode": "val", "epoch": 12, "iter": 4936, "lr": 0.0, "mAP": 0.37216}
{"mode": "train", "epoch": 13, "iter": 50, "lr": 0.0, "memory": 18647, "data_time": 0.12405, "loss_rpn_cls": 0.0001, "loss_rpn_bbox": 0.0, "s0.loss_cls": 0.0082, "s0.acc": 99.73196, "s0.loss_bbox": 0.00512, "s1.loss_cls": 0.01122, "s1.acc": 99.60178, "s1.loss_bbox": 0.01661, "loss": 0.04125, "grad_norm": 0.15193, "time": 3.28504}
{"mode": "train", "epoch": 13, "iter": 100, "lr": 0.0, "memory": 18647, "data_time": 0.06927, "loss_rpn_cls": 0.00012, "loss_rpn_bbox": 1e-05, "s0.loss_cls": 0.0079, "s0.acc": 99.7413, "s0.loss_bbox": 0.00514, "s1.loss_cls": 0.01089, "s1.acc": 99.6095, "s1.loss_bbox": 0.0165, "loss": 0.04056, "grad_norm": 0.13898, "time": 3.20701}
{"mode": "val", "epoch": 13, "iter": 4936, "lr": 0.0, "mAP": 0.37689}
{"mode": "train", "epoch": 14, "iter": 50, "lr": 0.0, "memory": 18647, "data_time": 0.12797, "loss_rpn_cls": 0.00011, "loss_rpn_bbox": 1e-05, "s0.loss_cls": 0.0085, "s0.acc": 99.72015, "s0.loss_bbox": 0.00558, "s1.loss_cls": 0.01144, "s1.acc": 99.5907, "s1.loss_bbox": 0.01725, "loss": 0.04289, "grad_norm": 0.14877, "time": 2.90127}
{"mode": "train", "epoch": 14, "iter": 100, "lr": 0.0, "memory": 18647, "data_time": 0.07676, "loss_rpn_cls": 0.00023, "loss_rpn_bbox": 1e-05, "s0.loss_cls": 0.00867, "s0.acc": 99.71219, "s0.loss_bbox": 0.00582, "s1.loss_cls": 0.01154, "s1.acc": 99.58939, "s1.loss_bbox": 0.01724, "loss": 0.04351, "grad_norm": 0.15524, "time": 3.23525}
{"mode": "val", "epoch": 14, "iter": 4936, "lr": 0.0, "mAP": 0.38394}
{"mode": "train", "epoch": 15, "iter": 50, "lr": 0.0, "memory": 18647, "data_time": 0.1236, "loss_rpn_cls": 6e-05, "loss_rpn_bbox": 0.0, "s0.loss_cls": 0.00838, "s0.acc": 99.71851, "s0.loss_bbox": 0.00561, "s1.loss_cls": 0.01145, "s1.acc": 99.58923, "s1.loss_bbox": 0.01767, "loss": 0.04316, "grad_norm": 0.14938, "time": 1.86948}
{"mode": "train", "epoch": 15, "iter": 100, "lr": 0.0, "memory": 18647, "data_time": 0.07389, "loss_rpn_cls": 0.00013, "loss_rpn_bbox": 0.0, "s0.loss_cls": 0.00877, "s0.acc": 99.71027, "s0.loss_bbox": 0.00599, "s1.loss_cls": 0.01187, "s1.acc": 99.57898, "s1.loss_bbox": 0.01792, "loss": 0.04468, "grad_norm": 0.1582, "time": 1.82253}
{"mode": "val", "epoch": 15, "iter": 4936, "lr": 0.0, "mAP": 0.38974}
{"mode": "train", "epoch": 16, "iter": 50, "lr": 0.0, "memory": 18647, "data_time": 0.12641, "loss_rpn_cls": 0.00021, "loss_rpn_bbox": 1e-05, "s0.loss_cls": 0.00893, "s0.acc": 99.70151, "s0.loss_bbox": 0.00594, "s1.loss_cls": 0.01183, "s1.acc": 99.57388, "s1.loss_bbox": 0.01837, "loss": 0.04531, "grad_norm": 0.15774, "time": 1.88366}
{"mode": "train", "epoch": 16, "iter": 100, "lr": 0.0, "memory": 18647, "data_time": 0.07336, "loss_rpn_cls": 5e-05, "loss_rpn_bbox": 0.0, "s0.loss_cls": 0.00889, "s0.acc": 99.70087, "s0.loss_bbox": 0.00621, "s1.loss_cls": 0.01185, "s1.acc": 99.57645, "s1.loss_bbox": 0.01804, "loss": 0.04504, "grad_norm": 0.15629, "time": 1.83036}
{"mode": "val", "epoch": 16, "iter": 4936, "lr": 0.0, "mAP": 0.38813}
{"mode": "train", "epoch": 17, "iter": 50, "lr": 0.0, "memory": 18647, "data_time": 0.12396, "loss_rpn_cls": 0.00017, "loss_rpn_bbox": 1e-05, "s0.loss_cls": 0.0093, "s0.acc": 99.68661, "s0.loss_bbox": 0.00628, "s1.loss_cls": 0.01232, "s1.acc": 99.55685, "s1.loss_bbox": 0.01913, "loss": 0.04721, "grad_norm": 0.16812, "time": 1.87621}
{"mode": "train", "epoch": 17, "iter": 100, "lr": 0.0, "memory": 18647, "data_time": 0.06843, "loss_rpn_cls": 3e-05, "loss_rpn_bbox": 0.0, "s0.loss_cls": 0.009, "s0.acc": 99.69711, "s0.loss_bbox": 0.00629, "s1.loss_cls": 0.01219, "s1.acc": 99.56131, "s1.loss_bbox": 0.0188, "loss": 0.04631, "grad_norm": 0.16026, "time": 1.82224}
{"mode": "val", "epoch": 17, "iter": 4936, "lr": 0.0, "mAP": 0.39597}
{"mode": "train", "epoch": 18, "iter": 50, "lr": 0.0, "memory": 18647, "data_time": 0.12383, "loss_rpn_cls": 0.00012, "loss_rpn_bbox": 1e-05, "s0.loss_cls": 0.00886, "s0.acc": 99.69925, "s0.loss_bbox": 0.00606, "s1.loss_cls": 0.01212, "s1.acc": 99.55933, "s1.loss_bbox": 0.01923, "loss": 0.04639, "grad_norm": 0.16308, "time": 1.86876}
{"mode": "train", "epoch": 18, "iter": 100, "lr": 0.0, "memory": 18647, "data_time": 0.07471, "loss_rpn_cls": 9e-05, "loss_rpn_bbox": 0.0, "s0.loss_cls": 0.00925, "s0.acc": 99.68649, "s0.loss_bbox": 0.00635, "s1.loss_cls": 0.01249, "s1.acc": 99.54886, "s1.loss_bbox": 0.01939, "loss": 0.04757, "grad_norm": 0.16887, "time": 1.83053}
{"mode": "val", "epoch": 18, "iter": 4936, "lr": 0.0, "mAP": 0.41719}
{"mode": "train", "epoch": 19, "iter": 50, "lr": 0.0, "memory": 18647, "data_time": 0.12459, "loss_rpn_cls": 3e-05, "loss_rpn_bbox": 0.0, "s0.loss_cls": 0.00925, "s0.acc": 99.68729, "s0.loss_bbox": 0.00648, "s1.loss_cls": 0.01253, "s1.acc": 99.54568, "s1.loss_bbox": 0.02001, "loss": 0.0483, "grad_norm": 0.17822, "time": 1.88328}
{"mode": "train", "epoch": 19, "iter": 100, "lr": 0.0, "memory": 18647, "data_time": 0.06969, "loss_rpn_cls": 0.00022, "loss_rpn_bbox": 1e-05, "s0.loss_cls": 0.00943, "s0.acc": 99.67984, "s0.loss_bbox": 0.00658, "s1.loss_cls": 0.0125, "s1.acc": 99.5513, "s1.loss_bbox": 0.0192, "loss": 0.04793, "grad_norm": 0.1675, "time": 1.83085}
{"mode": "val", "epoch": 19, "iter": 4936, "lr": 0.0, "mAP": 0.42008}
{"mode": "train", "epoch": 20, "iter": 50, "lr": 0.0, "memory": 18647, "data_time": 0.12266, "loss_rpn_cls": 0.0002, "loss_rpn_bbox": 1e-05, "s0.loss_cls": 0.0094, "s0.acc": 99.67661, "s0.loss_bbox": 0.0067, "s1.loss_cls": 0.01258, "s1.acc": 99.54562, "s1.loss_bbox": 0.01999, "loss": 0.04887, "grad_norm": 0.17295, "time": 1.87211}
{"mode": "train", "epoch": 20, "iter": 100, "lr": 0.0, "memory": 18647, "data_time": 0.07503, "loss_rpn_cls": 7e-05, "loss_rpn_bbox": 0.0, "s0.loss_cls": 0.00942, "s0.acc": 99.67694, "s0.loss_bbox": 0.00639, "s1.loss_cls": 0.01253, "s1.acc": 99.54944, "s1.loss_bbox": 0.01968, "loss": 0.04809, "grad_norm": 0.1695, "time": 1.82903}
{"mode": "val", "epoch": 20, "iter": 4936, "lr": 0.0, "mAP": 0.41687}
{"mode": "train", "epoch": 21, "iter": 50, "lr": 0.0, "memory": 18647, "data_time": 0.12417, "loss_rpn_cls": 0.00023, "loss_rpn_bbox": 1e-05, "s0.loss_cls": 0.00961, "s0.acc": 99.66733, "s0.loss_bbox": 0.00687, "s1.loss_cls": 0.01288, "s1.acc": 99.53311, "s1.loss_bbox": 0.02017, "loss": 0.04977, "grad_norm": 0.17373, "time": 1.87364}
{"mode": "train", "epoch": 21, "iter": 100, "lr": 0.0, "memory": 18647, "data_time": 0.07186, "loss_rpn_cls": 4e-05, "loss_rpn_bbox": 0.0, "s0.loss_cls": 0.00972, "s0.acc": 99.66577, "s0.loss_bbox": 0.0068, "s1.loss_cls": 0.01273, "s1.acc": 99.53555, "s1.loss_bbox": 0.02076, "loss": 0.05006, "grad_norm": 0.1732, "time": 1.82483}
{"mode": "val", "epoch": 21, "iter": 4936, "lr": 0.0, "mAP": 0.41294}
{"mode": "train", "epoch": 22, "iter": 50, "lr": 0.0, "memory": 18647, "data_time": 0.13063, "loss_rpn_cls": 0.00012, "loss_rpn_bbox": 0.0, "s0.loss_cls": 0.00976, "s0.acc": 99.66348, "s0.loss_bbox": 0.00688, "s1.loss_cls": 0.01292, "s1.acc": 99.53128, "s1.loss_bbox": 0.02065, "loss": 0.05033, "grad_norm": 0.17909, "time": 1.88237}
{"mode": "train", "epoch": 22, "iter": 100, "lr": 0.0, "memory": 18647, "data_time": 0.07518, "loss_rpn_cls": 8e-05, "loss_rpn_bbox": 0.0, "s0.loss_cls": 0.00972, "s0.acc": 99.66412, "s0.loss_bbox": 0.00684, "s1.loss_cls": 0.01296, "s1.acc": 99.53137, "s1.loss_bbox": 0.02048, "loss": 0.05008, "grad_norm": 0.17426, "time": 1.82743}
{"mode": "val", "epoch": 22, "iter": 4936, "lr": 0.0, "mAP": 0.41726}
{"mode": "train", "epoch": 23, "iter": 50, "lr": 0.0, "memory": 18647, "data_time": 0.12005, "loss_rpn_cls": 0.00017, "loss_rpn_bbox": 1e-05, "s0.loss_cls": 0.00969, "s0.acc": 99.66522, "s0.loss_bbox": 0.0068, "s1.loss_cls": 0.01272, "s1.acc": 99.54129, "s1.loss_bbox": 0.02034, "loss": 0.04973, "grad_norm": 0.17421, "time": 1.87004}
{"mode": "train", "epoch": 23, "iter": 100, "lr": 0.0, "memory": 18647, "data_time": 0.06908, "loss_rpn_cls": 7e-05, "loss_rpn_bbox": 0.0, "s0.loss_cls": 0.01005, "s0.acc": 99.65405, "s0.loss_bbox": 0.00704, "s1.loss_cls": 0.01313, "s1.acc": 99.52448, "s1.loss_bbox": 0.02116, "loss": 0.05146, "grad_norm": 0.18168, "time": 1.82023}
{"mode": "val", "epoch": 23, "iter": 4936, "lr": 0.0, "mAP": 0.41788}
{"mode": "train", "epoch": 24, "iter": 50, "lr": 0.0, "memory": 18647, "data_time": 0.11863, "loss_rpn_cls": 0.00017, "loss_rpn_bbox": 1e-05, "s0.loss_cls": 0.0101, "s0.acc": 99.64978, "s0.loss_bbox": 0.00711, "s1.loss_cls": 0.01323, "s1.acc": 99.5202, "s1.loss_bbox": 0.02143, "loss": 0.05204, "grad_norm": 0.18332, "time": 1.86702}
{"mode": "train", "epoch": 24, "iter": 100, "lr": 0.0, "memory": 18647, "data_time": 0.07225, "loss_rpn_cls": 0.00016, "loss_rpn_bbox": 1e-05, "s0.loss_cls": 0.00976, "s0.acc": 99.66071, "s0.loss_bbox": 0.00696, "s1.loss_cls": 0.0129, "s1.acc": 99.52612, "s1.loss_bbox": 0.02061, "loss": 0.05039, "grad_norm": 0.17367, "time": 1.81777}
{"mode": "val", "epoch": 24, "iter": 4936, "lr": 0.0, "mAP": 0.41862}
{"mode": "train", "epoch": 25, "iter": 50, "lr": 0.0, "memory": 18647, "data_time": 0.13058, "loss_rpn_cls": 0.00017, "loss_rpn_bbox": 1e-05, "s0.loss_cls": 0.01031, "s0.acc": 99.64325, "s0.loss_bbox": 0.00719, "s1.loss_cls": 0.01316, "s1.acc": 99.5206, "s1.loss_bbox": 0.02127, "loss": 0.0521, "grad_norm": 0.18198, "time": 1.88564}
{"mode": "train", "epoch": 25, "iter": 100, "lr": 0.0, "memory": 18647, "data_time": 0.07352, "loss_rpn_cls": 3e-05, "loss_rpn_bbox": 0.0, "s0.loss_cls": 0.00996, "s0.acc": 99.65485, "s0.loss_bbox": 0.00724, "s1.loss_cls": 0.01303, "s1.acc": 99.52911, "s1.loss_bbox": 0.02094, "loss": 0.05118, "grad_norm": 0.17717, "time": 1.82748}
{"mode": "val", "epoch": 25, "iter": 4936, "lr": 0.0, "mAP": 0.42585}
