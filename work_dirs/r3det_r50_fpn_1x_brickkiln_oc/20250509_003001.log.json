{"env_info": "sys.platform: linux\nPython: 3.8.20 | packaged by conda-forge | (default, Sep 30 2024, 17:52:49) [GCC 13.3.0]\nCUDA available: True\nGPU 0: NVIDIA A100-SXM4-80GB\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 10.1, V10.1.24\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0\nPyTorch: 1.9.0+cu111\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.10.0+cu111\nOpenCV: 4.11.0\nMMCV: 1.7.2\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.1\nMMRotate: 0.3.4+b030f38", "config": "dataset_type = 'BrickKilnDataset'\ndata_root = '/home/shardul.junagade/my-work/domain-adaptation-brick-kilns/data/stratified_split/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='RResize', img_scale=(128, 128)),\n    dict(\n        type='RRandomFlip',\n        flip_ratio=[0.25, 0.25, 0.25],\n        direction=['horizontal', 'vertical', 'diagonal'],\n        version='oc'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(128, 128),\n        flip=False,\n        transforms=[\n            dict(type='RResize'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=1218,\n    workers_per_gpu=2,\n    train=dict(\n        type='BrickKilnDataset',\n        ann_file=\n        '/home/shardul.junagade/my-work/domain-adaptation-brick-kilns/data/stratified_split/train/annfiles/',\n        img_prefix=\n        '/home/shardul.junagade/my-work/domain-adaptation-brick-kilns/data/stratified_split/train/images/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='RResize', img_scale=(128, 128)),\n            dict(\n                type='RRandomFlip',\n                flip_ratio=[0.25, 0.25, 0.25],\n                direction=['horizontal', 'vertical', 'diagonal'],\n                version='oc'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ],\n        version='oc'),\n    val=dict(\n        type='BrickKilnDataset',\n        ann_file=\n        '/home/shardul.junagade/my-work/domain-adaptation-brick-kilns/data/stratified_split/val/annfiles/',\n        img_prefix=\n        '/home/shardul.junagade/my-work/domain-adaptation-brick-kilns/data/stratified_split/val/images/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(128, 128),\n                flip=False,\n                transforms=[\n                    dict(type='RResize'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        version='oc'),\n    test=dict(\n        type='BrickKilnDataset',\n        ann_file=\n        '/home/shardul.junagade/my-work/domain-adaptation-brick-kilns/data/stratified_split/test/images/',\n        img_prefix=\n        '/home/shardul.junagade/my-work/domain-adaptation-brick-kilns/data/stratified_split/test/images/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(128, 128),\n                flip=False,\n                transforms=[\n                    dict(type='RResize'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        version='oc'))\nevaluation = dict(interval=1, metric='mAP')\noptimizer = dict(type='SGD', lr=0.0025, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.3333333333333333,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=25)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nangle_version = 'oc'\nmodel = dict(\n    type='R3Det',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        zero_init_residual=False,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(type='Pretrained', checkpoint='torchvision://resnet50')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=1,\n        add_extra_convs='on_input',\n        num_outs=5),\n    bbox_head=dict(\n        type='RotatedRetinaHead',\n        num_classes=3,\n        in_channels=256,\n        stacked_convs=4,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='RotatedAnchorGenerator',\n            octave_base_scale=4,\n            scales_per_octave=3,\n            ratios=[1.0, 0.5, 2.0],\n            strides=[8, 16, 32, 64, 128]),\n        bbox_coder=dict(\n            type='DeltaXYWHAOBBoxCoder',\n            angle_range='oc',\n            norm_factor=None,\n            edge_swap=False,\n            proj_xy=False,\n            target_means=(0.0, 0.0, 0.0, 0.0, 0.0),\n            target_stds=(1.0, 1.0, 1.0, 1.0, 1.0)),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=1.0),\n        loss_bbox=dict(type='SmoothL1Loss', beta=0.11, loss_weight=1.0)),\n    frm_cfgs=[dict(in_channels=256, featmap_strides=[8, 16, 32, 64, 128])],\n    num_refine_stages=1,\n    refine_heads=[\n        dict(\n            type='RotatedRetinaRefineHead',\n            num_classes=3,\n            in_channels=256,\n            stacked_convs=4,\n            feat_channels=256,\n            assign_by_circumhbbox=None,\n            anchor_generator=dict(\n                type='PseudoAnchorGenerator', strides=[8, 16, 32, 64, 128]),\n            bbox_coder=dict(\n                type='DeltaXYWHAOBBoxCoder',\n                angle_range='oc',\n                norm_factor=None,\n                edge_swap=False,\n                proj_xy=False,\n                target_means=(0.0, 0.0, 0.0, 0.0, 0.0),\n                target_stds=(1.0, 1.0, 1.0, 1.0, 1.0)),\n            loss_cls=dict(\n                type='FocalLoss',\n                use_sigmoid=True,\n                gamma=2.0,\n                alpha=0.25,\n                loss_weight=1.0),\n            loss_bbox=dict(type='SmoothL1Loss', beta=0.11, loss_weight=1.0))\n    ],\n    train_cfg=dict(\n        s0=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.4,\n                min_pos_iou=0,\n                ignore_iof_thr=-1,\n                iou_calculator=dict(type='RBboxOverlaps2D')),\n            allowed_border=-1,\n            pos_weight=-1,\n            debug=False),\n        sr=[\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.6,\n                    neg_iou_thr=0.5,\n                    min_pos_iou=0,\n                    ignore_iof_thr=-1,\n                    iou_calculator=dict(type='RBboxOverlaps2D')),\n                allowed_border=-1,\n                pos_weight=-1,\n                debug=False)\n        ],\n        stage_loss_weights=[1.0]),\n    test_cfg=dict(\n        nms_pre=2000,\n        min_bbox_size=0,\n        score_thr=0.05,\n        nms=dict(iou_thr=0.1),\n        max_per_img=2000))\nbatch_size = 1218\nnum_epochs = 25\nwork_dir = './work_dirs/r3det_r50_fpn_1x_brickkiln_oc'\nauto_resume = False\ngpu_ids = range(0, 1)\n", "seed": 0, "exp_name": "r3det_r50_fpn_1x_brickkiln_oc.py"}
{"mode": "val", "epoch": 1, "iter": 15590, "lr": 0.00096, "mAP": 0.0}
{"mode": "val", "epoch": 2, "iter": 15590, "lr": 0.00109, "mAP": 1e-05}
{"mode": "val", "epoch": 3, "iter": 15590, "lr": 0.00122, "mAP": 6e-05}
{"mode": "val", "epoch": 4, "iter": 15590, "lr": 0.00135, "mAP": 0.00017}
{"mode": "val", "epoch": 5, "iter": 15590, "lr": 0.00148, "mAP": 0.00058}
{"mode": "val", "epoch": 6, "iter": 15590, "lr": 0.00161, "mAP": 0.003}
{"mode": "val", "epoch": 7, "iter": 15590, "lr": 0.00174, "mAP": 0.00056}
{"mode": "val", "epoch": 8, "iter": 15590, "lr": 0.00187, "mAP": 0.00216}
{"mode": "val", "epoch": 9, "iter": 15590, "lr": 0.0002, "mAP": 0.0021}
{"mode": "val", "epoch": 10, "iter": 15590, "lr": 0.00021, "mAP": 0.00335}
{"mode": "val", "epoch": 11, "iter": 15590, "lr": 0.00023, "mAP": 0.0042}
{"mode": "val", "epoch": 12, "iter": 15590, "lr": 2e-05, "mAP": 0.00269}
{"mode": "val", "epoch": 13, "iter": 15590, "lr": 3e-05, "mAP": 0.00284}
{"mode": "val", "epoch": 14, "iter": 15590, "lr": 3e-05, "mAP": 0.00317}
{"mode": "val", "epoch": 15, "iter": 15590, "lr": 3e-05, "mAP": 0.00329}
{"mode": "val", "epoch": 16, "iter": 15590, "lr": 3e-05, "mAP": 0.00311}
{"mode": "val", "epoch": 17, "iter": 15590, "lr": 3e-05, "mAP": 0.00732}
{"mode": "val", "epoch": 18, "iter": 15590, "lr": 3e-05, "mAP": 0.00726}
{"mode": "val", "epoch": 19, "iter": 15590, "lr": 3e-05, "mAP": 0.00733}
{"mode": "val", "epoch": 20, "iter": 15590, "lr": 3e-05, "mAP": 0.00734}
{"mode": "val", "epoch": 21, "iter": 15590, "lr": 3e-05, "mAP": 0.00739}
{"mode": "val", "epoch": 22, "iter": 15590, "lr": 3e-05, "mAP": 0.00337}
{"mode": "val", "epoch": 23, "iter": 15590, "lr": 3e-05, "mAP": 0.00339}
