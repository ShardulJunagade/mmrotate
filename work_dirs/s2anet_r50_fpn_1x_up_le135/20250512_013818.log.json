{"env_info": "sys.platform: linux\nPython: 3.8.20 | packaged by conda-forge | (default, Sep 30 2024, 17:52:49) [GCC 13.3.0]\nCUDA available: True\nGPU 0: NVIDIA A100-SXM4-80GB\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 10.1, V10.1.24\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0\nPyTorch: 1.9.0+cu111\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.10.0+cu111\nOpenCV: 4.11.0\nMMCV: 1.7.2\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.1\nMMRotate: 0.3.4+b030f38", "config": "dataset_type = 'BrickKilnDataset'\ndata_root = '/home/shardul.junagade/my-work/domain-adaptation-brick-kilns/data/uttar_pradesh/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(type='RResize', img_scale=(128, 128)),\n    dict(\n        type='RRandomFlip',\n        flip_ratio=[0.25, 0.25, 0.25],\n        direction=['horizontal', 'vertical', 'diagonal'],\n        version='le135'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(128, 128),\n        flip=False,\n        transforms=[\n            dict(type='RResize'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=128,\n    workers_per_gpu=2,\n    train=dict(\n        type='BrickKilnDataset',\n        ann_file=\n        '/home/shardul.junagade/my-work/domain-adaptation-brick-kilns/data/uttar_pradesh/train/annfiles/',\n        img_prefix=\n        '/home/shardul.junagade/my-work/domain-adaptation-brick-kilns/data/uttar_pradesh/train/images/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True),\n            dict(type='RResize', img_scale=(128, 128)),\n            dict(\n                type='RRandomFlip',\n                flip_ratio=[0.25, 0.25, 0.25],\n                direction=['horizontal', 'vertical', 'diagonal'],\n                version='le135'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ],\n        version='le135'),\n    val=dict(\n        type='BrickKilnDataset',\n        ann_file=\n        '/home/shardul.junagade/my-work/domain-adaptation-brick-kilns/data/uttar_pradesh/val/annfiles/',\n        img_prefix=\n        '/home/shardul.junagade/my-work/domain-adaptation-brick-kilns/data/uttar_pradesh/val/images/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(128, 128),\n                flip=False,\n                transforms=[\n                    dict(type='RResize'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        version='le135'),\n    test=dict(\n        type='BrickKilnDataset',\n        ann_file=\n        '/home/shardul.junagade/my-work/domain-adaptation-brick-kilns/data/uttar_pradesh/test/images/',\n        img_prefix=\n        '/home/shardul.junagade/my-work/domain-adaptation-brick-kilns/data/uttar_pradesh/test/images/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(128, 128),\n                flip=False,\n                transforms=[\n                    dict(type='RResize'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='DefaultFormatBundle'),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        version='le135'))\nevaluation = dict(interval=1, metric='mAP')\noptimizer = dict(type='SGD', lr=0.0025, momentum=0.9, weight_decay=0.0001)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.3333333333333333,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=25)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nangle_version = 'le135'\nmodel = dict(\n    type='S2ANet',\n    backbone=dict(\n        type='ResNet',\n        depth=50,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        zero_init_residual=False,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        norm_eval=True,\n        style='pytorch',\n        init_cfg=dict(type='Pretrained', checkpoint='torchvision://resnet50')),\n    neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=1,\n        add_extra_convs='on_input',\n        num_outs=5),\n    fam_head=dict(\n        type='RotatedRetinaHead',\n        num_classes=3,\n        in_channels=256,\n        stacked_convs=2,\n        feat_channels=256,\n        assign_by_circumhbbox=None,\n        anchor_generator=dict(\n            type='RotatedAnchorGenerator',\n            scales=[4],\n            ratios=[1.0],\n            strides=[8, 16, 32, 64, 128]),\n        bbox_coder=dict(\n            type='DeltaXYWHAOBBoxCoder',\n            angle_range='le135',\n            norm_factor=1,\n            edge_swap=False,\n            proj_xy=True,\n            target_means=(0.0, 0.0, 0.0, 0.0, 0.0),\n            target_stds=(1.0, 1.0, 1.0, 1.0, 1.0)),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=1.0),\n        loss_bbox=dict(type='SmoothL1Loss', beta=0.11, loss_weight=1.0)),\n    align_cfgs=dict(\n        type='AlignConv',\n        kernel_size=3,\n        channels=256,\n        featmap_strides=[8, 16, 32, 64, 128]),\n    odm_head=dict(\n        type='ODMRefineHead',\n        num_classes=3,\n        in_channels=256,\n        stacked_convs=2,\n        feat_channels=256,\n        assign_by_circumhbbox=None,\n        anchor_generator=dict(\n            type='PseudoAnchorGenerator', strides=[8, 16, 32, 64, 128]),\n        bbox_coder=dict(\n            type='DeltaXYWHAOBBoxCoder',\n            angle_range='le135',\n            norm_factor=1,\n            edge_swap=False,\n            proj_xy=True,\n            target_means=(0.0, 0.0, 0.0, 0.0, 0.0),\n            target_stds=(1.0, 1.0, 1.0, 1.0, 1.0)),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=1.0),\n        loss_bbox=dict(type='SmoothL1Loss', beta=0.11, loss_weight=1.0)),\n    train_cfg=dict(\n        fam_cfg=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.4,\n                min_pos_iou=0,\n                ignore_iof_thr=-1,\n                iou_calculator=dict(type='RBboxOverlaps2D')),\n            allowed_border=-1,\n            pos_weight=-1,\n            debug=False),\n        odm_cfg=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.4,\n                min_pos_iou=0,\n                ignore_iof_thr=-1,\n                iou_calculator=dict(type='RBboxOverlaps2D')),\n            allowed_border=-1,\n            pos_weight=-1,\n            debug=False)),\n    test_cfg=dict(\n        nms_pre=2000,\n        min_bbox_size=0,\n        score_thr=0.05,\n        nms=dict(iou_thr=0.1),\n        max_per_img=2000))\nbatch_size = 128\nnum_epochs = 25\nwork_dir = './work_dirs/s2anet_r50_fpn_1x_up_le135'\nauto_resume = False\ngpu_ids = range(0, 1)\n", "seed": 0, "exp_name": "s2anet_r50_fpn_1x_up_le135.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.001, "memory": 3133, "data_time": 0.18456, "fam.loss_cls": 0.85162, "fam.loss_bbox": 1.37332, "odm.loss_cls": 1.11687, "odm.loss_bbox": 1.55861, "loss": 4.90041, "grad_norm": 24.8378, "time": 3.03832}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00116, "memory": 3133, "data_time": 0.11842, "fam.loss_cls": 0.51725, "fam.loss_bbox": 0.71385, "odm.loss_cls": 0.8305, "odm.loss_bbox": 0.9126, "loss": 2.97421, "grad_norm": 10.19022, "time": 2.78657}
{"mode": "val", "epoch": 1, "iter": 4936, "lr": 0.00122, "mAP": 0.00137}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.00138, "memory": 3133, "data_time": 0.12543, "fam.loss_cls": 0.42655, "fam.loss_bbox": 0.57693, "odm.loss_cls": 0.58241, "odm.loss_bbox": 0.70243, "loss": 2.28832, "grad_norm": 13.67515, "time": 1.89643}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.00155, "memory": 3133, "data_time": 0.07535, "fam.loss_cls": 0.43883, "fam.loss_bbox": 0.5172, "odm.loss_cls": 0.55112, "odm.loss_bbox": 0.60049, "loss": 2.10765, "grad_norm": 11.43273, "time": 1.82799}
{"mode": "val", "epoch": 2, "iter": 4936, "lr": 0.0016, "mAP": 0.02796}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.00177, "memory": 3133, "data_time": 0.12194, "fam.loss_cls": 0.37618, "fam.loss_bbox": 0.48017, "odm.loss_cls": 0.46877, "odm.loss_bbox": 0.54552, "loss": 1.87064, "grad_norm": 8.28566, "time": 1.81847}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.00194, "memory": 3133, "data_time": 0.07252, "fam.loss_cls": 0.36973, "fam.loss_bbox": 0.48581, "odm.loss_cls": 0.447, "odm.loss_bbox": 0.53531, "loss": 1.83785, "grad_norm": 9.70505, "time": 1.81077}
{"mode": "val", "epoch": 3, "iter": 4936, "lr": 0.00199, "mAP": 0.04686}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.00216, "memory": 3133, "data_time": 0.13286, "fam.loss_cls": 0.35932, "fam.loss_bbox": 0.46349, "odm.loss_cls": 0.41978, "odm.loss_bbox": 0.49564, "loss": 1.73824, "grad_norm": 7.33737, "time": 1.95409}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.00232, "memory": 3133, "data_time": 0.07606, "fam.loss_cls": 0.34989, "fam.loss_bbox": 0.43765, "odm.loss_cls": 0.39752, "odm.loss_bbox": 0.45944, "loss": 1.6445, "grad_norm": 7.72005, "time": 1.84888}
{"mode": "val", "epoch": 4, "iter": 4936, "lr": 0.00238, "mAP": 0.06893}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.0025, "memory": 3133, "data_time": 0.12452, "fam.loss_cls": 0.3316, "fam.loss_bbox": 0.4037, "odm.loss_cls": 0.36144, "odm.loss_bbox": 0.41831, "loss": 1.51505, "grad_norm": 5.3553, "time": 1.87694}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.0025, "memory": 3133, "data_time": 0.07071, "fam.loss_cls": 0.32723, "fam.loss_bbox": 0.39161, "odm.loss_cls": 0.34617, "odm.loss_bbox": 0.40647, "loss": 1.47147, "grad_norm": 6.91495, "time": 1.82129}
{"mode": "val", "epoch": 5, "iter": 4936, "lr": 0.0025, "mAP": 0.1653}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 0.0025, "memory": 3133, "data_time": 0.12547, "fam.loss_cls": 0.32147, "fam.loss_bbox": 0.38843, "odm.loss_cls": 0.3321, "odm.loss_bbox": 0.39807, "loss": 1.44007, "grad_norm": 7.77665, "time": 1.86785}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.0025, "memory": 3133, "data_time": 0.07318, "fam.loss_cls": 0.31924, "fam.loss_bbox": 0.36535, "odm.loss_cls": 0.31955, "odm.loss_bbox": 0.37769, "loss": 1.38183, "grad_norm": 5.74604, "time": 1.77266}
{"mode": "val", "epoch": 6, "iter": 4936, "lr": 0.0025, "mAP": 0.0951}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 0.0025, "memory": 3133, "data_time": 0.13134, "fam.loss_cls": 0.30621, "fam.loss_bbox": 0.34228, "odm.loss_cls": 0.29859, "odm.loss_bbox": 0.36084, "loss": 1.30791, "grad_norm": 4.57917, "time": 1.96111}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 0.0025, "memory": 3133, "data_time": 0.07831, "fam.loss_cls": 0.3048, "fam.loss_bbox": 0.34464, "odm.loss_cls": 0.28401, "odm.loss_bbox": 0.35331, "loss": 1.28676, "grad_norm": 4.71189, "time": 1.92258}
{"mode": "val", "epoch": 7, "iter": 4936, "lr": 0.0025, "mAP": 0.1618}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 0.0025, "memory": 3133, "data_time": 0.12659, "fam.loss_cls": 0.29931, "fam.loss_bbox": 0.32911, "odm.loss_cls": 0.27691, "odm.loss_bbox": 0.34484, "loss": 1.25017, "grad_norm": 4.59666, "time": 1.94223}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 0.0025, "memory": 3133, "data_time": 0.07593, "fam.loss_cls": 0.29987, "fam.loss_bbox": 0.33219, "odm.loss_cls": 0.26712, "odm.loss_bbox": 0.34002, "loss": 1.2392, "grad_norm": 4.32037, "time": 1.83705}
{"mode": "val", "epoch": 8, "iter": 4936, "lr": 0.0025, "mAP": 0.21006}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 0.00025, "memory": 3133, "data_time": 0.1236, "fam.loss_cls": 0.29264, "fam.loss_bbox": 0.3061, "odm.loss_cls": 0.25723, "odm.loss_bbox": 0.31826, "loss": 1.17423, "grad_norm": 2.82346, "time": 1.92603}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 0.00025, "memory": 3133, "data_time": 0.07335, "fam.loss_cls": 0.29144, "fam.loss_bbox": 0.30563, "odm.loss_cls": 0.25229, "odm.loss_bbox": 0.31827, "loss": 1.16763, "grad_norm": 2.49161, "time": 1.84493}
{"mode": "val", "epoch": 9, "iter": 4936, "lr": 0.00025, "mAP": 0.23487}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 0.00025, "memory": 3133, "data_time": 0.11978, "fam.loss_cls": 0.28908, "fam.loss_bbox": 0.29927, "odm.loss_cls": 0.25066, "odm.loss_bbox": 0.31317, "loss": 1.15218, "grad_norm": 2.52648, "time": 1.8678}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 0.00025, "memory": 3133, "data_time": 0.0698, "fam.loss_cls": 0.29246, "fam.loss_bbox": 0.30094, "odm.loss_cls": 0.2539, "odm.loss_bbox": 0.31464, "loss": 1.16194, "grad_norm": 2.73753, "time": 1.70822}
{"mode": "val", "epoch": 10, "iter": 4936, "lr": 0.00025, "mAP": 0.23008}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 0.00025, "memory": 3133, "data_time": 0.12405, "fam.loss_cls": 0.292, "fam.loss_bbox": 0.29611, "odm.loss_cls": 0.25078, "odm.loss_bbox": 0.3108, "loss": 1.14968, "grad_norm": 2.75245, "time": 1.92954}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 0.00025, "memory": 3133, "data_time": 0.07537, "fam.loss_cls": 0.29013, "fam.loss_bbox": 0.29571, "odm.loss_cls": 0.24919, "odm.loss_bbox": 0.31154, "loss": 1.14658, "grad_norm": 2.59774, "time": 1.85467}
{"mode": "val", "epoch": 11, "iter": 4936, "lr": 0.00025, "mAP": 0.23747}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 3e-05, "memory": 3133, "data_time": 0.12247, "fam.loss_cls": 0.28914, "fam.loss_bbox": 0.2952, "odm.loss_cls": 0.24877, "odm.loss_bbox": 0.31159, "loss": 1.1447, "grad_norm": 2.54476, "time": 1.8711}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 3e-05, "memory": 3133, "data_time": 0.07425, "fam.loss_cls": 0.28901, "fam.loss_bbox": 0.29267, "odm.loss_cls": 0.24811, "odm.loss_bbox": 0.30663, "loss": 1.13641, "grad_norm": 2.47912, "time": 1.82711}
{"mode": "val", "epoch": 12, "iter": 4936, "lr": 3e-05, "mAP": 0.23654}
{"mode": "train", "epoch": 13, "iter": 50, "lr": 3e-05, "memory": 3133, "data_time": 0.12589, "fam.loss_cls": 0.28581, "fam.loss_bbox": 0.29226, "odm.loss_cls": 0.24844, "odm.loss_bbox": 0.31117, "loss": 1.13768, "grad_norm": 2.55257, "time": 1.89333}
{"mode": "train", "epoch": 13, "iter": 100, "lr": 3e-05, "memory": 3133, "data_time": 0.06868, "fam.loss_cls": 0.2914, "fam.loss_bbox": 0.29547, "odm.loss_cls": 0.24843, "odm.loss_bbox": 0.31114, "loss": 1.14643, "grad_norm": 2.50947, "time": 1.81227}
{"mode": "val", "epoch": 13, "iter": 4936, "lr": 3e-05, "mAP": 0.23141}
{"mode": "train", "epoch": 14, "iter": 50, "lr": 3e-05, "memory": 3133, "data_time": 0.12215, "fam.loss_cls": 0.28836, "fam.loss_bbox": 0.29346, "odm.loss_cls": 0.24792, "odm.loss_bbox": 0.31222, "loss": 1.14197, "grad_norm": 2.4758, "time": 1.88528}
{"mode": "train", "epoch": 14, "iter": 100, "lr": 3e-05, "memory": 3133, "data_time": 0.07032, "fam.loss_cls": 0.29196, "fam.loss_bbox": 0.30044, "odm.loss_cls": 0.24946, "odm.loss_bbox": 0.3118, "loss": 1.15365, "grad_norm": 2.54782, "time": 1.78888}
{"mode": "val", "epoch": 14, "iter": 4936, "lr": 3e-05, "mAP": 0.23295}
{"mode": "train", "epoch": 15, "iter": 50, "lr": 3e-05, "memory": 3133, "data_time": 0.122, "fam.loss_cls": 0.29029, "fam.loss_bbox": 0.29244, "odm.loss_cls": 0.24678, "odm.loss_bbox": 0.30709, "loss": 1.13659, "grad_norm": 2.4996, "time": 1.88719}
{"mode": "train", "epoch": 15, "iter": 100, "lr": 3e-05, "memory": 3133, "data_time": 0.07421, "fam.loss_cls": 0.28925, "fam.loss_bbox": 0.29792, "odm.loss_cls": 0.24763, "odm.loss_bbox": 0.31132, "loss": 1.14611, "grad_norm": 2.45082, "time": 1.85953}
{"mode": "val", "epoch": 15, "iter": 4936, "lr": 3e-05, "mAP": 0.23279}
{"mode": "train", "epoch": 16, "iter": 50, "lr": 3e-05, "memory": 3133, "data_time": 0.11981, "fam.loss_cls": 0.28952, "fam.loss_bbox": 0.29632, "odm.loss_cls": 0.24669, "odm.loss_bbox": 0.31232, "loss": 1.14485, "grad_norm": 2.47186, "time": 1.88498}
{"mode": "train", "epoch": 16, "iter": 100, "lr": 3e-05, "memory": 3133, "data_time": 0.06533, "fam.loss_cls": 0.28935, "fam.loss_bbox": 0.29651, "odm.loss_cls": 0.24808, "odm.loss_bbox": 0.30797, "loss": 1.14191, "grad_norm": 2.49913, "time": 1.81399}
{"mode": "val", "epoch": 16, "iter": 4936, "lr": 3e-05, "mAP": 0.23544}
{"mode": "train", "epoch": 17, "iter": 50, "lr": 3e-05, "memory": 3133, "data_time": 0.12567, "fam.loss_cls": 0.2898, "fam.loss_bbox": 0.29644, "odm.loss_cls": 0.24802, "odm.loss_bbox": 0.31276, "loss": 1.14703, "grad_norm": 2.47943, "time": 1.84948}
{"mode": "train", "epoch": 17, "iter": 100, "lr": 3e-05, "memory": 3133, "data_time": 0.06981, "fam.loss_cls": 0.29019, "fam.loss_bbox": 0.2927, "odm.loss_cls": 0.24937, "odm.loss_bbox": 0.31028, "loss": 1.14254, "grad_norm": 2.48926, "time": 1.80348}
{"mode": "val", "epoch": 17, "iter": 4936, "lr": 3e-05, "mAP": 0.23249}
{"mode": "train", "epoch": 18, "iter": 50, "lr": 3e-05, "memory": 3133, "data_time": 0.1273, "fam.loss_cls": 0.291, "fam.loss_bbox": 0.29642, "odm.loss_cls": 0.24725, "odm.loss_bbox": 0.31055, "loss": 1.14522, "grad_norm": 2.52062, "time": 1.91208}
{"mode": "train", "epoch": 18, "iter": 100, "lr": 3e-05, "memory": 3133, "data_time": 0.07382, "fam.loss_cls": 0.28849, "fam.loss_bbox": 0.29669, "odm.loss_cls": 0.2472, "odm.loss_bbox": 0.31027, "loss": 1.14265, "grad_norm": 2.42182, "time": 1.8446}
{"mode": "val", "epoch": 18, "iter": 4936, "lr": 3e-05, "mAP": 0.2338}
{"mode": "train", "epoch": 19, "iter": 50, "lr": 3e-05, "memory": 3133, "data_time": 0.12612, "fam.loss_cls": 0.28908, "fam.loss_bbox": 0.29477, "odm.loss_cls": 0.24985, "odm.loss_bbox": 0.31195, "loss": 1.14565, "grad_norm": 2.47182, "time": 2.17834}
{"mode": "train", "epoch": 19, "iter": 100, "lr": 3e-05, "memory": 3133, "data_time": 0.07321, "fam.loss_cls": 0.28648, "fam.loss_bbox": 0.29435, "odm.loss_cls": 0.24458, "odm.loss_bbox": 0.3073, "loss": 1.13271, "grad_norm": 2.5391, "time": 2.61778}
{"mode": "val", "epoch": 19, "iter": 4936, "lr": 3e-05, "mAP": 0.2356}
{"mode": "train", "epoch": 20, "iter": 50, "lr": 3e-05, "memory": 3133, "data_time": 0.12182, "fam.loss_cls": 0.28902, "fam.loss_bbox": 0.29597, "odm.loss_cls": 0.24884, "odm.loss_bbox": 0.30982, "loss": 1.14365, "grad_norm": 2.55006, "time": 2.81994}
{"mode": "train", "epoch": 20, "iter": 100, "lr": 3e-05, "memory": 3133, "data_time": 0.0666, "fam.loss_cls": 0.28899, "fam.loss_bbox": 0.29517, "odm.loss_cls": 0.24586, "odm.loss_bbox": 0.30979, "loss": 1.1398, "grad_norm": 2.47601, "time": 2.76093}
{"mode": "val", "epoch": 20, "iter": 4936, "lr": 3e-05, "mAP": 0.2372}
{"mode": "train", "epoch": 21, "iter": 50, "lr": 3e-05, "memory": 3133, "data_time": 0.12223, "fam.loss_cls": 0.29115, "fam.loss_bbox": 0.29753, "odm.loss_cls": 0.2486, "odm.loss_bbox": 0.31057, "loss": 1.14784, "grad_norm": 2.52793, "time": 2.8316}
{"mode": "train", "epoch": 21, "iter": 100, "lr": 3e-05, "memory": 3133, "data_time": 0.06936, "fam.loss_cls": 0.28827, "fam.loss_bbox": 0.29383, "odm.loss_cls": 0.24632, "odm.loss_bbox": 0.30874, "loss": 1.13716, "grad_norm": 2.52346, "time": 3.12537}
{"mode": "val", "epoch": 21, "iter": 4936, "lr": 3e-05, "mAP": 0.23482}
{"mode": "train", "epoch": 22, "iter": 50, "lr": 3e-05, "memory": 3133, "data_time": 0.12432, "fam.loss_cls": 0.28704, "fam.loss_bbox": 0.29645, "odm.loss_cls": 0.24856, "odm.loss_bbox": 0.31011, "loss": 1.14216, "grad_norm": 2.49835, "time": 3.2384}
{"mode": "train", "epoch": 22, "iter": 100, "lr": 3e-05, "memory": 3133, "data_time": 0.07022, "fam.loss_cls": 0.28939, "fam.loss_bbox": 0.29018, "odm.loss_cls": 0.24529, "odm.loss_bbox": 0.30776, "loss": 1.13262, "grad_norm": 2.5278, "time": 3.15573}
{"mode": "val", "epoch": 22, "iter": 4936, "lr": 3e-05, "mAP": 0.23435}
{"mode": "train", "epoch": 23, "iter": 50, "lr": 3e-05, "memory": 3133, "data_time": 0.12421, "fam.loss_cls": 0.29279, "fam.loss_bbox": 0.2972, "odm.loss_cls": 0.24622, "odm.loss_bbox": 0.30729, "loss": 1.14349, "grad_norm": 2.4335, "time": 3.21279}
{"mode": "train", "epoch": 23, "iter": 100, "lr": 3e-05, "memory": 3133, "data_time": 0.07257, "fam.loss_cls": 0.28758, "fam.loss_bbox": 0.29786, "odm.loss_cls": 0.248, "odm.loss_bbox": 0.31357, "loss": 1.147, "grad_norm": 2.59391, "time": 3.27984}
{"mode": "val", "epoch": 23, "iter": 4936, "lr": 3e-05, "mAP": 0.23334}
{"mode": "train", "epoch": 24, "iter": 50, "lr": 3e-05, "memory": 3133, "data_time": 0.13346, "fam.loss_cls": 0.28977, "fam.loss_bbox": 0.2944, "odm.loss_cls": 0.245, "odm.loss_bbox": 0.30917, "loss": 1.13834, "grad_norm": 2.4968, "time": 3.34964}
{"mode": "train", "epoch": 24, "iter": 100, "lr": 3e-05, "memory": 3133, "data_time": 0.07424, "fam.loss_cls": 0.28737, "fam.loss_bbox": 0.29085, "odm.loss_cls": 0.24789, "odm.loss_bbox": 0.31197, "loss": 1.13809, "grad_norm": 2.48491, "time": 3.273}
{"mode": "val", "epoch": 24, "iter": 4936, "lr": 3e-05, "mAP": 0.23323}
{"mode": "train", "epoch": 25, "iter": 50, "lr": 3e-05, "memory": 3133, "data_time": 0.12228, "fam.loss_cls": 0.2888, "fam.loss_bbox": 0.29256, "odm.loss_cls": 0.24765, "odm.loss_bbox": 0.30841, "loss": 1.13743, "grad_norm": 2.46089, "time": 3.23217}
{"mode": "train", "epoch": 25, "iter": 100, "lr": 3e-05, "memory": 3133, "data_time": 0.06861, "fam.loss_cls": 0.29069, "fam.loss_bbox": 0.29277, "odm.loss_cls": 0.24554, "odm.loss_bbox": 0.30761, "loss": 1.1366, "grad_norm": 2.46802, "time": 3.21425}
{"mode": "val", "epoch": 25, "iter": 4936, "lr": 3e-05, "mAP": 0.23509}
